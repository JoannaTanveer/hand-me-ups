{"version":3,"sources":["components/Navbar/index.js","pages/Forgot.js","pages/Signup.js","components/Charts/index.js","utils/API.js","pages/Members.js","components/Login/index.js","pages/Welcome.js","components/Profiles/index.js","pages/Profile.js","components/Router/index.js","components/Footer/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Navbar","className","to","window","location","pathname","Forgot","Signup","Charts","useState","toysTotal","setToys","clothesTotal","setClothes","furnitureTotal","setFurniture","useEffect","fetch","then","response","json","result","console","log","toysDonated","clothesDonated","furnitureDonated","catch","error","width","height","data","name","amt","margin","top","right","left","bottom","strokeDasharray","dataKey","type","domain","fill","userName","password","axios","post","accessToken","localStorage","setItem","JSON","stringify","removeItem","parse","getItem","userData","put","id","members","currentUser","API","history","useHistory","onClick","push","Login","isLoggedIn","setLoggedIn","isError","setIsError","setUserName","setPassword","placeholder","value","onChange","event","target","preventDefault","status","aria-hidden","Welcome","Profiles","setId","setUsername","address1","setAddress","city","setCity","state","setState","zipcode","setZipcode","showForm","setshowForm","rowSpan","Profile","PrivateRoute","component","options","Router","exact","path","Members","Footer","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6e75b7a0.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './style.css';\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Navbar() {\n    return (\n        <nav className=\"navbar\">\n            <Link className=\"navbar-brand\" to=\"/\">\n                Hand Me Ups\n            </Link>\n            <div>\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                        <Link\n                            to=\"/Members\"\n                            className={\n                                window.location.pathname === '/Members'\n                                    ? 'nav-link active'\n                                    : 'nav-link'\n                            }\n                        >\n                            Members\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link\n                            to=\"/Profile\"\n                            className={\n                                window.location.pathname === '/Profile'\n                                    ? 'nav-link active'\n                                    : 'nav-link'\n                            }\n                        >\n                            Profile\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    );\n}\n\nexport default Navbar;\n","import React from 'react';\n\nfunction Forgot() {\n    return (\n        <div>\n            <h1>Forgot Page</h1>\n        </div>\n    );\n}\n\nexport default Forgot;\n","import React from 'react';\n\nfunction Signup() {\n    return (\n        <div>\n            <h1>Signup Page</h1>\n        </div>\n    );\n}\n\nexport default Signup;\n","import React, { useState, useEffect } from 'react';\nimport {\n    BarChart,\n    Bar,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n} from 'recharts';\n\nfunction Charts() {\n    const [toysTotal, setToys] = useState();\n    const [clothesTotal, setClothes] = useState();\n    const [furnitureTotal, setFurniture] = useState();\n\n    const getDonations = () => {\n        fetch('api/charts')\n            .then((response) => response.json())\n            .then((result) => {\n                console.log(result[0]);\n                setToys(result[0].toysDonated);\n                setClothes(result[0].clothesDonated);\n                setFurniture(result[0].furnitureDonated);\n            })\n            .catch((error) => console.log(error));\n    };\n\n    useEffect(() => {\n        getDonations();\n    }, []);\n\n    return (\n        <BarChart\n            width={300}\n            height={300}\n            data={[\n                {\n                    name: 'Clothes',\n                    amt: clothesTotal,\n                },\n                {\n                    name: 'Toys',\n                    amt: toysTotal,\n                },\n                {\n                    name: 'Furniture',\n                    amt: furnitureTotal,\n                },\n            ]}\n            margin={{\n                top: 5,\n                right: 30,\n                left: 20,\n                bottom: 5,\n            }}\n        >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis type=\"number\" domain={[0, 500]} />\n            <Tooltip />\n            <Legend />\n            <Bar name=\"Amount donated\" dataKey=\"amt\" fill=\"#8884d8\" />\n            {/* <Bar name=\"Families Connected\" dataKey=\"fam\" fill=\"#82ca9d\" /> */}\n        </BarChart>\n    );\n}\n\nexport default Charts;\n","import axios from 'axios';\n\nexport default {\n    getUser: (id) => {\n        return axios.get(`./api/user/${id}`);\n    },\n\n    login: (userName, password) => {\n        return axios\n            .post('./api/auth/login', {\n                userName,\n                password,\n            })\n            .then((response) => {\n                if (response.data.accessToken) {\n                    localStorage.setItem('user', JSON.stringify(response.data));\n                }\n                return response;\n            });\n    },\n\n    logout: () => {\n        localStorage.removeItem('user');\n    },\n\n    getCurrentUser: () => JSON.parse(localStorage.getItem('user')),\n\n    signup: (userName, password, address1, city, state, zipcode) => {\n        return axios.post('./api/auth/signup', {\n            userName,\n            password,\n            address1,\n            city,\n            state,\n            zipcode,\n        });\n    },\n\n    editUser: function (userData) {\n        return axios.put(`/api/profile/${userData.id}`, userData);\n    },\n};\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Charts from '../components/Charts';\nimport API from '../utils/API';\n\nconst members = () => {\n    const currentUser = API.getCurrentUser();\n    const history = useHistory();\n\n    const logout = () => {\n        API.logout();\n        history.push('/');\n    };\n\n    return (\n        <div>\n            <h1>Members Page</h1>\n            <p>Welcome {currentUser.userName}</p>\n            <button onClick={logout}>Log out</button>\n            <Charts />\n        </div>\n    );\n};\n\nexport default members;\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport API from '../../utils/API';\nimport './style.css';\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Login() {\n    const [isLoggedIn, setLoggedIn] = useState(false);\n    const [isError, setIsError] = useState(false);\n    const [userName, setUserName] = useState('');\n    const [password, setPassword] = useState('');\n\n    function postLogin(event) {\n        event.preventDefault();\n        API.login(userName, password)\n            .then((result) => {\n                if (result.status === 200) {\n                    setLoggedIn(true);\n                } else {\n                    setIsError(true);\n                }\n            })\n            .catch(() => {\n                setIsError(true);\n            });\n    }\n\n    if (isLoggedIn) {\n        return <Redirect to=\"/Members\" />;\n    }\n\n    return (\n        <form className=\"login-form\">\n            <h2>Welcome back</h2>\n            <div className=\"login-row\">\n                <label type=\"text\" name=\"userName\">\n                    Username\n                </label>\n                <br></br>\n                <input\n                    className=\"input-field\"\n                    type=\"userName\"\n                    id=\"userName\"\n                    name=\"userName\"\n                    placeholder=\"Username\"\n                    value={userName}\n                    onChange={(event) => {\n                        setUserName(event.target.value);\n                    }}\n                />\n            </div>\n            <br></br>\n            <div className=\"login-row\">\n                <label type=\"text\" name=\"password\">\n                    Password\n                </label>\n                <br></br>\n                <input\n                    className=\"input-field\"\n                    type=\"password\"\n                    id=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={(event) => {\n                        setPassword(event.target.value);\n                    }}\n                />\n            </div>\n            <br></br>\n            <div className=\"login-row\">\n                <input\n                    type=\"checkbox\"\n                    id=\"remember-me\"\n                    name=\"remember-me\"\n                    value=\"false\"\n                />\n                <label type=\"text\" name=\"remember-me\">\n                    &nbsp;Remember Me\n                </label>\n            </div>\n            <br></br>\n            <div className=\"login-row\">\n                <button className=\"sign-in-btn\" onClick={postLogin}>\n                    Sign In\n                </button>\n            </div>\n            <br></br>\n            <div className=\"login-row\">\n                <Link className=\"forgot\" to=\"/forgot\">\n                    Forgot password?&nbsp;\n                    <i className=\"fas fa-angle-right\" aria-hidden=\"true\"></i>\n                </Link>\n            </div>\n            <div className=\"login-row\">\n                <Link className=\"forgot\" to=\"/signup\">\n                    Not a member? Sign up now.&nbsp;\n                    <i className=\"fas fa-angle-right\" aria-hidden=\"true\"></i>\n                </Link>\n                {isError && (\n                    <div className=\"error\">\n                        The username or password provided did not match.\n                    </div>\n                )}\n            </div>\n        </form>\n    );\n}\n\nexport default Login;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport Login from '../components/Login';\n\nimport API from '../utils/API';\n\nfunction Welcome() {\n    if (API.getCurrentUser()) {\n        return <Redirect to={'/Members'} />;\n    }\n\n    return (\n        <div>\n            <h1>Welcome Page</h1>\n            <Login />\n        </div>\n    );\n}\n\nexport default Welcome;\n","import React, { useState, useEffect } from 'react';\nimport API from '../../utils/API';\n\nfunction Profiles() {\n    const [id, setId] = useState();\n    const [userName, setUsername] = useState();\n    const [address1, setAddress] = useState();\n    const [city, setCity] = useState();\n    const [state, setState] = useState();\n    const [zipcode, setZipcode] = useState();\n    const [showForm, setshowForm] = useState(false);\n    const currentUser = API.getCurrentUser();\n\n    const hideShowForm = () => {\n        if (showForm) {\n            setshowForm(false);\n        } else {\n            setshowForm(true);\n        }\n    };\n    const updateInfo = (event) => {\n        event.preventDefault();\n        console.log(address1);\n        API.editUser({\n            userName,\n            id,\n            address1,\n            city,\n            state,\n            zipcode,\n        }).then((response) => {\n            if (response.status === 200) {\n                localStorage.setItem(\n                    'user',\n                    JSON.stringify({\n                        id: id,\n                        userName: userName,\n                        address1: address1,\n                        city: city,\n                        state: state,\n                        zipcode: zipcode,\n                    })\n                );\n                setshowForm(false);\n            }\n        });\n    };\n\n    useEffect(() => {\n        setId(currentUser.id);\n        setUsername(currentUser.userName);\n        setAddress(currentUser.address1);\n        setCity(currentUser.city);\n        setState(currentUser.state);\n        setZipcode(currentUser.zipcode);\n    }, []);\n\n    return (\n        <div>\n            <h2>Edit your profile</h2>\n            <table>\n                <tr>\n                    <td>Username:</td> <td>{currentUser.userName}</td>\n                </tr>\n                <tr>\n                    <td>Address:</td> <td>{currentUser.address1}</td>\n                </tr>\n                <tr>\n                    <td>City:</td> <td>{currentUser.city} </td>\n                </tr>\n                <tr>\n                    <td>State:</td> <td>{currentUser.state} </td>\n                </tr>\n                <tr>\n                    <td>Zipcode:</td> <td>{currentUser.zipcode} </td>\n                </tr>\n                <tr rowSpan=\"2\">\n                    <button onClick={hideShowForm}>Edit</button>\n                </tr>\n            </table>\n            {showForm ? (\n                <form>\n                    <th>Username:</th>\n                    <input\n                        type=\"text\"\n                        placeholder={userName}\n                        value={userName}\n                        onChange={(event) => {\n                            setUsername(event.target.value);\n                        }}\n                    />\n                    <th>Address:</th>\n                    <input\n                        type=\"text\"\n                        placeholder={address1}\n                        value={address1}\n                        onChange={(event) => {\n                            setAddress(event.target.value);\n                        }}\n                    />\n                    <th>City:</th>\n                    <input\n                        type=\"text\"\n                        placeholder={city}\n                        value={city}\n                        onChange={(event) => {\n                            setCity(event.target.value);\n                        }}\n                    />\n                    <th>State:</th>\n                    <input\n                        type=\"text\"\n                        placeholder={state}\n                        value={state}\n                        onChange={(event) => {\n                            setState(event.target.value);\n                        }}\n                    />\n                    <th>Zipcode:</th>\n                    <input\n                        type=\"text\"\n                        placeholder={zipcode}\n                        value={zipcode}\n                        onChange={(event) => {\n                            setZipcode(event.target.value);\n                        }}\n                    />\n                    <button onClick={updateInfo}>Update</button>\n                </form>\n            ) : (\n                <div />\n            )}\n        </div>\n    );\n}\n\nexport default Profiles;\n","import React from 'react';\nimport Profiles from '../components/Profiles';\n\nfunction Profile() {\n    return (\n        <>\n            <Profiles />\n        </>\n    );\n}\nexport default Profile;\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Forgot from '../../pages/Forgot';\nimport Signup from '../../pages/Signup';\nimport Members from '../../pages/Members';\nimport Welcome from '../../pages/Welcome';\nimport Profile from '../../pages/Profile';\n\nimport API from '../../utils/API';\n\nconst PrivateRoute = ({ component, ...options }) => {\n    if (API.getCurrentUser()) {\n        return <Route {...options} component={component} />;\n    }\n    return <Redirect to={'/'} />;\n};\n\nPrivateRoute.propTypes = {\n    options: PropTypes.string.isRequired,\n    component: PropTypes.string.isRequired,\n};\n\nconst Router = () => (\n    <Switch>\n        <PrivateRoute exact path=\"/Members\" component={Members} />\n        <PrivateRoute exact path=\"/Profile\" component={Profile} />\n        <Route exact path=\"/Forgot\" component={Forgot} />\n        <Route exact path=\"/Signup\" component={Signup} />\n        <Route path=\"/\" component={Welcome} />\n    </Switch>\n);\n\nexport default Router;\n","import React from 'react';\nimport './style.css';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <span>Hand Me Ups ©2020</span>\n        </footer>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\n\n// Components\nimport Navbar from './components/Navbar';\nimport Router from './components/Router';\nimport Footer from './components/Footer';\n\nfunction App() {\n    return (\n        <div id=\"auth\">\n            <Navbar />\n            <Router />\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (!isLocalhost) {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl);\n            } else {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log(\n                                'New content is available; please refresh.'\n                            );\n                        } else {\n                            // At this point, everything has been pre-cached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get('content-type').indexOf('javascript') ===\n                    -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}