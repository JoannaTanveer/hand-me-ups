{"version":3,"sources":["components/Navbar/index.js","components/Footer/index.js","pages/Welcome.js","components/Charts/index.js","pages/Members.js","App.js","registerServiceWorker.js","index.js"],"names":["Navbar","className","to","window","location","pathname","Footer","Welcome","Charts","useState","toysTotal","setToys","clothesTotal","setClothes","furnitureTotal","setFurniture","useEffect","fetch","then","response","json","result","console","log","toysDonated","clothesDonated","furnitureDonated","catch","error","width","height","data","name","amt","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","Members","App","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ff7fc38e.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './style.css';\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Navbar() {\n    return (\n        <nav className=\"navbar\">\n            <Link className=\"navbar-brand\" to=\"/\">\n                Hand Me Ups\n            </Link>\n            <div>\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                        <Link\n                            to=\"/Members\"\n                            className={\n                                window.location.pathname === '/Members'\n                                    ? 'nav-link active'\n                                    : 'nav-link'\n                            }\n                        >\n                            Members\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport './style.css';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <span>Hand Me Ups Â©2020</span>\n        </footer>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\n\nfunction Welcome() {\n    return (\n        <div>\n            <h1>Welcome Page</h1>\n        </div>\n    );\n}\n\nexport default Welcome;\n","import React, { useState, useEffect } from 'react';\nimport {\n    BarChart,\n    Bar,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n} from 'recharts';\n\nfunction Charts() {\n    const [toysTotal, setToys] = useState();\n    const [clothesTotal, setClothes] = useState();\n    const [furnitureTotal, setFurniture] = useState();\n\n    const getDonations = () => {\n        fetch('api/charts')\n            .then((response) => response.json())\n            .then((result) => {\n                console.log(result[0]);\n                setToys(result[0].toysDonated);\n                setClothes(result[0].clothesDonated);\n                setFurniture(result[0].furnitureDonated);\n            })\n            .catch((error) => console.log(error));\n    };\n\n    useEffect(() => {\n        getDonations();\n    }, []);\n\n    return (\n        <BarChart\n            width={300}\n            height={300}\n            data={[\n                {\n                    name: 'Clothes',\n                    amt: clothesTotal,\n                },\n                {\n                    name: 'Toys',\n                    amt: toysTotal,\n                },\n                {\n                    name: 'Furniture',\n                    amt: furnitureTotal,\n                },\n            ]}\n            margin={{\n                top: 5,\n                right: 30,\n                left: 20,\n                bottom: 5,\n            }}\n        >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Bar name=\"Amount donated\" dataKey=\"amt\" fill=\"#8884d8\" />\n            {/* <Bar name=\"Families Connected\" dataKey=\"fam\" fill=\"#82ca9d\" /> */}\n        </BarChart>\n    );\n}\n\nexport default Charts;\n","import React from 'react';\nimport Charts from '../components/Charts';\n\nfunction Members() {\n    return (\n        <div>\n            <h1>Members Page</h1>\n            <Charts />\n        </div>\n    );\n}\n\nexport default Members;\n","import React from 'react';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// Components\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\n// import Wrapper from './components/Wrapper';\n\n// Pages\nimport Welcome from './pages/Welcome';\nimport Members from './pages/Members';\n\nfunction App() {\n    return (\n        <Router>\n            <div>\n                <Navbar />\n                <Switch>\n                    <Route exact path=\"/\" component={Welcome} />\n                    <Route exact path=\"/Members\" component={Members} />\n                </Switch>\n                <Footer />\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (!isLocalhost) {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl);\n            } else {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log(\n                                'New content is available; please refresh.'\n                            );\n                        } else {\n                            // At this point, everything has been pre-cached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get('content-type').indexOf('javascript') ===\n                    -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}