{"version":3,"sources":["pages/Forgot.js","utils/auth.js","utils/API.js","components/SignUp/index.js","pages/Signup.js","components/Charts/index.js","pages/Members.js","components/Login/index.js","pages/Welcome.js","components/EditTagCheckbox/index.js","components/ChildProfile/index.js","components/Profiles/index.js","pages/Profile.js","components/TagCheckbox/index.js","components/AddChild/index.js","pages/AddChild.js","components/toyTags/toyTags.js","components/clothesTags/clothesTags.js","components/furnitureTags/furnitureTags.js","components/DonationDemographics/domationDemographics.js","components/chooseBtn/chooseBtn.js","components/ShippingLabel/index.js","components/Outgoing Donations/index.js","pages/Donations.js","utils/GlobalContext.js","components/notification/index.js","components/Navbar/index.js","components/MessageLine/index.js","components/Chat/index.js","components/Footer/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Forgot","crypto","require","user","JSON","parse","localStorage","getItem","localToken","createHmac","accessToken","update","document","location","host","digest","id","axios","url","method","headers","then","response","status","data","email","password","post","setItem","stringify","removeItem","userData","childId","toyTags","filter","element","type","clothesTags","furnitureTags","SignUp","useState","setEmail","setPassword","firstName","setFirstName","lastName","setLastName","address1","setAddress1","address2","setAddress2","city","setCity","state","setState","zipCode","setZipCode","redirect","setRedirect","to","htmlFor","name","placeholder","value","onChange","event","target","rowSpan","onClick","preventDefault","API","signUp","Charts","toysTotal","setToys","clothesTotal","setClothes","furnitureTotal","setFurniture","useEffect","result","toysDonated","clothesDonated","furnitureDonated","catch","error","console","log","width","height","amt","margin","top","right","left","bottom","strokeDasharray","dataKey","domain","fill","members","currentUser","className","Login","isLoggedIn","setLoggedIn","isError","setIsError","userName","setUserName","aria-hidden","Welcome","EditTagCheckbox","tag","tags","icon","Icon","edit","isChecked","setisChecked","match","setMatch","includes","checked","handleClick","ChildProfile","child","birthday","setBirthday","gender","setGender","receiveToys","setreceiveToys","receiveClothes","setreceiveClothes","receiveFurniture","setreceiveFurniture","donateToys","setdonateToys","donateClothes","setdonateClothes","donateFurniture","setdonateFurniture","showForm","setShowForm","settoyTags","setclothesTags","setfurnitureTags","setTags","handlecheckboxClick","faChess","faTshirt","faChair","map","faCheckSquare","FontAwesomeIcon","ParentId","childArray","children","childObject","window","reload","Profiles","setId","setAddress","refresh","setRefresh","setChildren","Profile","TagCheckbox","AddChild","handleTagClick","push","addChild","m","DonationDemographics","toytags","clothestags","furnituretags","age","ChooseBtn","changeChosen","childID","Barcode","ShippingLabel","parentFName","parentLName","parentID","parentAddy1","parentCity","parentState","parentZip","toggleModal","barcodeString","Outgoing","loading","setLoading","results","setResults","chosenState","setChosenState","shippingLabel","setShippingLabel","stopPropagation","Donations","GlobalContext","createContext","GlobalContextProvider","props","shipNotifications","setShipNotifications","Provider","propTypes","PropTypes","node","socket","io","withCredentials","extraHeaders","Notification","useContext","on","title","Fragment","handleMouseClick","faMailBulk","Navbar","history","useHistory","activeClassName","MessageLine","line","author","align","textAlign","style","message","Chat","setMessage","showPopup","setShowPopup","feedback","setFeedback","showFeedback","setShowFeedback","output","setOutput","notificationCount","setNotificationCount","index","emit","handleMessage","faPaperPlane","faUser","Footer","PrivateRoute","component","options","App","exact","path","Members","Signup","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","getElementById","URL","process","origin","addEventListener","fetch","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7e4d17e4.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Forgot() {\n    return (\n        <div>\n            <h1>Forgot Page</h1>\n        </div>\n    );\n}\n\nexport default Forgot;\n","export default () => {\n    const crypto = require('crypto');\n    const user = JSON.parse(localStorage.getItem('user'));\n\n    const localToken = crypto\n        .createHmac('sha256', user.accessToken)\n        .update(document.location.host)\n        .digest('hex');\n\n    if (user && user.accessToken && localToken) {\n        return {\n            'x-access-token': localToken,\n            'x-user-id': user.id,\n            'content-type': 'application/json',\n        };\n    }\n    return {};\n};\n","import axios from 'axios';\nimport headers from './auth';\n\nexport default {\n    getCharts: () => {\n        return axios({\n            url: './api/charts',\n            method: 'GET',\n            headers: headers(),\n        }).then((response) => {\n            if (response.status === 200) {\n                return response.data;\n            }\n            return response;\n        });\n    },\n\n    getUser: (id) => {\n        return axios({\n            url: `./api/profile/${id}`,\n            method: 'GET',\n            headers: headers(),\n        }).then((response) => {\n            if (response.status === 200) {\n                return response.data;\n            }\n            return response;\n        });\n    },\n\n    login: (email, password) => {\n        return axios\n            .post('./api/auth/login', {\n                email,\n                password,\n            })\n            .then((response) => {\n                if (response.data.accessToken) {\n                    localStorage.setItem('user', JSON.stringify(response.data));\n                }\n                return response;\n            });\n    },\n\n    logout: () => {\n        localStorage.removeItem('user');\n    },\n\n    getCurrentUser: () => JSON.parse(localStorage.getItem('user')),\n\n    signup: (userData) => {\n        return axios.post('./api/auth/signup', userData);\n    },\n\n    editUser: function (userData) {\n        return axios({\n            url: `/api/profile/${userData.id}`,\n            userData,\n            method: 'PUT',\n            headers: headers(),\n        });\n    },\n\n    addChild: function (userData) {\n        return axios({\n            url: '/api/child/addChild',\n            data: userData,\n            method: 'POST',\n            headers: headers(),\n        });\n    },\n\n    getChildren: function () {\n        return axios({\n            url: 'api/child/children',\n            method: 'GET',\n            headers: headers(),\n        }).then((response) => {\n            if (response.status === 200) {\n                return response.data;\n            }\n            return response;\n        });\n    },\n\n    addDonation: function (userData) {\n        return axios({\n            url: 'api/donation/create',\n            data: userData,\n            method: 'POST',\n            headers: headers(),\n        }).then((response) => {\n            if (response.status === 200) {\n                return response.data;\n            }\n            return response;\n        });\n    },\n\n    deleteChild: function (childId) {\n        return axios({\n            url: `api/child/deleteChild/${childId}`,\n            method: 'DELETE',\n            headers: headers(),\n        });\n    },\n\n    editChild: function (userData) {\n        return axios({\n            url: `api/child/editChild/${userData.id}`,\n            data: userData,\n            method: 'PUT',\n            headers: headers(),\n        });\n    },\n\n    getTags: function () {\n        return axios({\n            url: 'api/tags',\n            method: 'GET',\n            headers: headers(),\n        }).then((response) => {\n            if (response.status === 200) {\n                const toyTags = response.data.filter(\n                    (element) => element.type === 'toy'\n                );\n                const clothesTags = response.data.filter(\n                    (element) => element.type === 'clothes'\n                );\n                const furnitureTags = response.data.filter(\n                    (element) => element.type === 'furniture'\n                );\n                return { toyTags, clothesTags, furnitureTags };\n            }\n            return 'Error getting tags';\n        });\n    },\n};\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport API from '../../utils/API';\n\nfunction SignUp() {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [address1, setAddress1] = useState('');\n    const [address2, setAddress2] = useState('');\n    const [city, setCity] = useState('');\n    const [state, setState] = useState('');\n    const [zipCode, setZipCode] = useState('');\n    const [redirect, setRedirect] = useState('');\n\n    const createUser = (event) => {\n        event.preventDefault();\n\n        API.signup({\n            email,\n            password,\n            firstName,\n            lastName,\n            address1,\n            address2,\n            city,\n            state,\n            zipCode,\n        }).then((response) => {\n            if (response.status === 200) {\n                localStorage.setItem(\n                    'user',\n                    JSON.stringify({\n                        id: id,\n                        email: email,\n                        address1: address1,\n                        city: city,\n                        state: state,\n                        zipCode: zipCode,\n                    })\n                );\n                setRedirect(true);\n            }\n        });\n    };\n\n    if (redirect) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <div>\n            <table>\n                <tbody>\n                    <tr>\n                        <td>\n                            <label htmlFor=\"email\">Email:</label>\n                        </td>\n                        <td>\n                            <input\n                                name=\"email\"\n                                type=\"text\"\n                                placeholder=\"\"\n                                value={email}\n                                onChange={(event) => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <label htmlFor=\"password\">Password:</label>\n                        </td>\n                        <td>\n                            <input\n                                name=\"password\"\n                                type=\"password\"\n                                placeholder=\"\"\n                                value={password}\n                                onChange={(event) => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <label htmlFor=\"firstName\">First Name:</label>\n                        </td>\n                        <td>\n                            <input\n                                name=\"firstName\"\n                                type=\"text\"\n                                placeholder=\"\"\n                                value={firstName}\n                                onChange={(event) => {\n                                    setFirstName(event.target.value);\n                                }}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <label htmlFor=\"lastName\">Last Name:</label>\n                        </td>\n                        <td>\n                            <input\n                                name=\"lastName\"\n                                type=\"text\"\n                                placeholder=\"\"\n                                value={lastName}\n                                onChange={(event) => {\n                                    setLastName(event.target.value);\n                                }}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <label htmlFor=\"address1\">Address Line 1:</label>\n                        </td>\n                        <td>\n                            <input\n                                name=\"address1\"\n                                type=\"text\"\n                                placeholder=\"\"\n                                value={address1}\n                                onChange={(event) => {\n                                    setAddress1(event.target.value);\n                                }}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <label htmlFor=\"address2\">Address Line 2:</label>\n                        </td>\n                        <td>\n                            <input\n                                name=\"address2\"\n                                type=\"text\"\n                                placeholder=\"\"\n                                value={address2}\n                                onChange={(event) => {\n                                    setAddress2(event.target.value);\n                                }}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <label htmlFor=\"city\">City:</label>\n                        </td>\n                        <td>\n                            <input\n                                name=\"city\"\n                                type=\"text\"\n                                placeholder=\"\"\n                                value={city}\n                                onChange={(event) => {\n                                    setCity(event.target.value);\n                                }}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <label htmlFor=\"state\">State:</label>\n                        </td>\n                        <td>\n                            <input\n                                name=\"state\"\n                                type=\"text\"\n                                placeholder=\"\"\n                                value={state}\n                                onChange={(event) => {\n                                    setState(event.target.value);\n                                }}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <label htmlFor=\"zipCode\">Zip Code:</label>\n                        </td>\n                        <td>\n                            <input\n                                name=\"zipCode\"\n                                type=\"text\"\n                                placeholder=\"\"\n                                value={zipCode}\n                                onChange={(event) => {\n                                    setZipCode(event.target.value);\n                                }}\n                            />\n                        </td>\n                    </tr>\n                    <tr rowSpan=\"2\">\n                        <td>\n                            <button onClick={createUser}>Create Account</button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default SignUp;\n","import React from 'react';\nimport SignUp from '../components/SignUp';\n\nfunction signUp() {\n    return (\n        <div>\n            <h1>Create an account</h1>\n            <SignUp />\n        </div>\n    );\n}\n\nexport default signUp;\n","import React, { useState, useEffect } from 'react';\nimport {\n    BarChart,\n    Bar,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n} from 'recharts';\nimport API from '../../utils/API';\n\nfunction Charts() {\n    const [toysTotal, setToys] = useState();\n    const [clothesTotal, setClothes] = useState();\n    const [furnitureTotal, setFurniture] = useState();\n\n    const getDonations = () => {\n        API.getCharts()\n            .then((result) => {\n                setToys(result[0].toysDonated);\n                setClothes(result[0].clothesDonated);\n                setFurniture(result[0].furnitureDonated);\n            })\n            .catch((error) => console.log(error));\n    };\n\n    useEffect(() => {\n        getDonations();\n    }, []);\n\n    return (\n        <BarChart\n            width={300}\n            height={300}\n            data={[\n                {\n                    name: 'Clothes',\n                    amt: clothesTotal,\n                },\n                {\n                    name: 'Toys',\n                    amt: toysTotal,\n                },\n                {\n                    name: 'Furniture',\n                    amt: furnitureTotal,\n                },\n            ]}\n            margin={{\n                top: 5,\n                right: 30,\n                left: 20,\n                bottom: 5,\n            }}\n        >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis type=\"number\" domain={[0, 500]} />\n            <Tooltip />\n            <Legend />\n            <Bar name=\"Amount donated\" dataKey=\"amt\" fill=\"#8884d8\" />\n            {/* <Bar name=\"Families Connected\" dataKey=\"fam\" fill=\"#82ca9d\" /> */}\n        </BarChart>\n    );\n}\n\nexport default Charts;\n","import React from 'react';\nimport Charts from '../components/Charts';\n\nimport API from '../utils/API';\nimport { Link } from 'react-router-dom';\n\nconst members = () => {\n    const currentUser = API.getCurrentUser();\n\n    return (\n        <div className=\"loggedInDiv\">\n            <h1>Members Page</h1>\n            <p>Welcome {currentUser.firstName}</p>\n            <Charts />\n            <Link className=\"donateBtn\" to=\"/Donations\">\n                I&apos;m ready to DONATE!\n            </Link>\n        </div>\n    );\n};\n\nexport default members;\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport API from '../../utils/API';\nimport './style.css';\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Login() {\n    const [isLoggedIn, setLoggedIn] = useState(false);\n    const [isError, setIsError] = useState(false);\n    const [userName, setUserName] = useState('');\n    const [password, setPassword] = useState('');\n\n    function postLogin(event) {\n        event.preventDefault();\n        API.login(userName, password)\n            .then((result) => {\n                if (result.status === 200) {\n                    setLoggedIn(true);\n                } else {\n                    setIsError(true);\n                }\n            })\n            .catch(() => {\n                setIsError(true);\n            });\n    }\n\n    if (isLoggedIn) {\n        return <Redirect to=\"/Members\" />;\n    }\n\n    return (\n        <form className=\"login-form\" id=\"login\">\n            <h2>Welcome Back</h2>\n            <br></br>\n            <div className=\"login-row\">\n                <label type=\"text\" htmlFor=\"userName\">\n                    Username\n                </label>\n                <br></br>\n                <input\n                    className=\"input-field\"\n                    type=\"userName\"\n                    id=\"userName\"\n                    name=\"userName\"\n                    placeholder=\"\"\n                    value={userName}\n                    onChange={(event) => {\n                        setUserName(event.target.value);\n                    }}\n                />\n            </div>\n            <br></br>\n            <div className=\"login-row\">\n                <label type=\"text\" htmlFor=\"password\">\n                    Password\n                </label>\n                <br></br>\n                <input\n                    className=\"input-field\"\n                    type=\"password\"\n                    id=\"password\"\n                    name=\"password\"\n                    placeholder=\"\"\n                    value={password}\n                    onChange={(event) => {\n                        setPassword(event.target.value);\n                    }}\n                />\n            </div>\n            <br></br>\n            <div className=\"login-row\">\n                <input\n                    type=\"checkbox\"\n                    id=\"remember-me\"\n                    name=\"remember-me\"\n                    value=\"false\"\n                />\n                <label type=\"text\" htmlFor=\"remember-me\">\n                    &nbsp;Remember Me\n                </label>\n            </div>\n            <br></br>\n            <div className=\"login-row\">\n                <button className=\"sign-in-btn\" onClick={postLogin}>\n                    Sign In\n                </button>\n            </div>\n            <br></br>\n            <div className=\"login-row\">\n                <Link className=\"forgot\" to=\"/forgot\">\n                    Forgot password?&nbsp;\n                    <i className=\"fas fa-angle-right\" aria-hidden=\"true\"></i>\n                </Link>\n            </div>\n            <div className=\"login-row\">\n                <Link className=\"forgot\" to=\"/signup\">\n                    Not a member? Sign up now.&nbsp;\n                    <i className=\"fas fa-angle-right\" aria-hidden=\"true\"></i>\n                </Link>\n                {isError && (\n                    <div className=\"error\">\n                        The username or password provided did not match.\n                    </div>\n                )}\n            </div>\n        </form>\n    );\n}\n\nexport default Login;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './styles.css';\n\nimport Login from '../components/Login';\n\nimport API from '../utils/API';\n\nfunction Welcome() {\n    if (API.getCurrentUser()) {\n        return <Redirect to={'/Members'} />;\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"header\">\n                <h1>Hand-Me-Ups</h1>\n            </div>\n            <div id=\"lego\"></div>\n            <div id=\"stripe\"></div>\n            <div id=\"grid-one\"></div>\n            <div id=\"grid-two\">\n                <h1>Connect</h1>\n\n                <p id=\"p1\">\n                    Join local families and help your child learn about\n                    responsibility, genorosity and giving. Donate or recieve\n                    toys, clothing and furniture from a family in your community\n                    and give these items a second life.\n                </p>\n            </div>\n            <div id=\"grid-three\">\n                <h1>Donate and Recieve</h1>\n\n                <p id=\"p1\">\n                    Create an account and sign up to recieve and donate toys,\n                    furniture or clothing. Based on your childrens age, gender\n                    preference and items to be donated or recieved you can\n                    connect with families in your community that fit the needs\n                    of your child. Let the toys, clothing and furniture that\n                    your child no longer uses have a second chance to bring joy\n                    to a child or recieve items that your child will love.\n                </p>\n            </div>\n            <Login />\n        </div>\n    );\n}\n\nexport default Welcome;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction EditTagCheckbox({ tag, tags, id, icon, Icon, edit, onClick }) {\n    const [isChecked, setisChecked] = useState(false);\n    const [match, setMatch] = useState(false);\n\n    useEffect(() => {\n        if (tags.includes(id)) {\n            setMatch(true);\n            setisChecked(true);\n        }\n    }, []);\n\n    const handleClick = (event) => {\n        setisChecked(event.target.checked);\n        onClick(id);\n    };\n\n    return (\n        <tr>\n            <td>\n                <label>{tag}:</label>\n            </td>\n            <td>{match && !edit ? <Icon icon={icon} /> : ''}</td>\n\n            <td>\n                {edit ? (\n                    <form>\n                        <input\n                            type=\"checkbox\"\n                            checked={isChecked}\n                            onChange={(event) => handleClick(event)}\n                        />\n                    </form>\n                ) : (\n                    ''\n                )}\n            </td>\n        </tr>\n    );\n}\nEditTagCheckbox.propTypes = {\n    tag: PropTypes.string,\n    tags: PropTypes.array,\n    id: PropTypes.number,\n    icon: PropTypes.object,\n    Icon: PropTypes.func,\n    edit: PropTypes.bool,\n    onClick: PropTypes.func,\n};\nexport default EditTagCheckbox;\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport API from '../../utils/API';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faTshirt,\n    faChair,\n    faChess,\n    faCheckSquare,\n} from '@fortawesome/free-solid-svg-icons';\nimport EditTagCheckbox from '../EditTagCheckbox';\nimport './style.css';\n\nfunction ChildProfile(child) {\n    const [redirect, setRedirect] = useState(false);\n    const currentUser = API.getCurrentUser('');\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [birthday, setBirthday] = useState('');\n    const [gender, setGender] = useState('');\n    const [receiveToys, setreceiveToys] = useState();\n    const [receiveClothes, setreceiveClothes] = useState();\n    const [receiveFurniture, setreceiveFurniture] = useState();\n    const [donateToys, setdonateToys] = useState();\n    const [donateClothes, setdonateClothes] = useState();\n    const [donateFurniture, setdonateFurniture] = useState();\n    const [showForm, setShowForm] = useState(false);\n    const [toyTags, settoyTags] = useState([]);\n    const [clothesTags, setclothesTags] = useState([]);\n    const [furnitureTags, setfurnitureTags] = useState([]);\n    const [tags, setTags] = useState([]);\n\n    const hideShowForm = () => {\n        if (showForm) {\n            setShowForm(false);\n        } else {\n            setShowForm(true);\n        }\n    };\n\n    const deleteChild = (event) => {\n        event.preventDefault();\n        API.deleteChild(child.ParentId, child.childId).then((response) => {\n            if (response.status === 200) {\n                const childArray = currentUser.children;\n                currentUser.children = childArray.filter((childObject) => {\n                    return childObject.childId !== child.childId;\n                });\n                localStorage.setItem('user', JSON.stringify(currentUser));\n                setRedirect(true);\n            }\n        });\n    };\n\n    const saveChanges = (event) => {\n        event.preventDefault();\n        API.editChild(\n            {\n                firstName,\n                lastName,\n                birthday,\n                gender,\n                receiveToys,\n                receiveClothes,\n                receiveFurniture,\n                donateToys,\n                donateClothes,\n                donateFurniture,\n                tags,\n                id: child.childId,\n            },\n            currentUser.id\n        ).then((response) => {\n            if (response.status === 200) {\n                const childArray = currentUser.children;\n                currentUser.children = childArray.map((childObject) => {\n                    if (childObject.childId !== child.childId) {\n                        return childObject;\n                    }\n                    childObject.firstName = firstName;\n                    childObject.lastName = lastName;\n                    childObject.birthday = birthday;\n                    childObject.gender = gender;\n                    childObject.receiveToys = receiveToys;\n                    childObject.receiveClothes = receiveClothes;\n                    childObject.receiveFurniture = receiveFurniture;\n                    childObject.donateToys = donateToys;\n                    childObject.donateClothes = donateClothes;\n                    childObject.donateFurniture = donateFurniture;\n                    childObject.tags = tags;\n                    return childObject;\n                });\n                localStorage.setItem('user', JSON.stringify(currentUser));\n                window.location.reload();\n            }\n        });\n    };\n\n    const handlecheckboxClick = (id) => {\n        if (tags.includes(id)) {\n            setTags(tags.filter((tag) => tag !== id));\n        } else {\n            setTags([...tags, id]);\n        }\n    };\n\n    const reload = () => {\n        window.location.reload();\n    };\n\n    useEffect(() => {\n        setFirstName(child.firstName);\n        setLastName(child.lastName);\n        setBirthday(child.birthday);\n        setGender(child.gender);\n        setreceiveToys(child.receiveToys);\n        setreceiveClothes(child.receiveClothes);\n        setreceiveFurniture(child.receiveFurniture);\n        setdonateToys(child.donateToys);\n        setdonateClothes(child.donateClothes);\n        setdonateFurniture(child.donateFurniture);\n        if (child.tags) {\n            setTags(child.tags);\n        }\n        API.getTags().then((response) => {\n            console.log(response);\n            if (response !== 'Error getting tags') {\n                settoyTags(response.toyTags);\n                setclothesTags(response.clothesTags);\n                setfurnitureTags(response.furnitureTags);\n            }\n        });\n    }, []);\n\n    if (redirect) {\n        return <Redirect to=\"/Profile\" />;\n    }\n    return (\n        <div className=\"childProfile\">\n            <h2 className=\"editChildTitle\">\n                Edit {child.firstName}&#8217;s profile\n            </h2>\n            <table className=\"table\">\n                <tbody id=\"childTableBody\">\n                    <tr>\n                        <td>\n                            <label\n                                htmlFor=\"firstName\"\n                                className=\"editChildLabel\"\n                            >\n                                Firstname:\n                            </label>\n                        </td>\n                        <td>{child.firstName}</td>\n                        <td>\n                            {showForm ? (\n                                <input\n                                    name=\"firstName\"\n                                    className=\"editChildInput\"\n                                    type=\"text\"\n                                    placeholder={child.firstName}\n                                    value={firstName}\n                                    onChange={(event) => {\n                                        setFirstName(event.target.value);\n                                    }}\n                                />\n                            ) : (\n                                <div />\n                            )}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <label\n                                htmlFor=\"lastName\"\n                                className=\"editChildLabel\"\n                            >\n                                Last Name:\n                            </label>\n                        </td>\n                        <td>{child.lastName}</td>\n                        <td>\n                            {showForm ? (\n                                <input\n                                    name=\"lastName\"\n                                    className=\"editChildInput\"\n                                    type=\"text\"\n                                    placeholder={child.lastName}\n                                    value={lastName}\n                                    onChange={(event) => {\n                                        setLastName(event.target.value);\n                                    }}\n                                />\n                            ) : (\n                                <div />\n                            )}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <label\n                                htmlFor=\"birthday\"\n                                className=\"editChildLabel\"\n                            >\n                                Birthday:\n                            </label>\n                        </td>\n                        <td>{child.birthday}</td>\n                        <td>\n                            {showForm ? (\n                                <input\n                                    name=\"birthday\"\n                                    className=\"editChildInput\"\n                                    type=\"text\"\n                                    placeholder={child.birthday}\n                                    value={birthday}\n                                    onChange={(event) => {\n                                        setBirthday(event.target.value);\n                                    }}\n                                />\n                            ) : (\n                                <div />\n                            )}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <label htmlFor=\"gender\" className=\"editChildLabel\">\n                                Gender:\n                            </label>\n                        </td>\n                        <td>{child.gender}</td>\n                        <td>\n                            {showForm ? (\n                                <select\n                                    className=\"childSelect\"\n                                    onChange={(event) => {\n                                        setGender(event.target.value);\n                                    }}\n                                >\n                                    <option value=\"male\">male</option>\n                                    <option value=\"female\">female</option>\n                                </select>\n                            ) : (\n                                ''\n                            )}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <label\n                                htmlFor=\"receiveToys\"\n                                className=\"editChildLabel\"\n                            >\n                                Receive Toys:\n                            </label>\n                        </td>\n                        <td>\n                            {child.receiveToys ? (\n                                <FontAwesomeIcon icon={faChess} />\n                            ) : (\n                                ''\n                            )}\n                        </td>\n                        <td>\n                            {showForm ? (\n                                <input\n                                    name=\"receiveToys\"\n                                    className=\"editChildCheckbox\"\n                                    type=\"checkbox\"\n                                    checked={receiveToys}\n                                    onChange={(event) => {\n                                        setreceiveToys(event.target.checked);\n                                    }}\n                                />\n                            ) : (\n                                ''\n                            )}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <label\n                                htmlFor=\"receiveClothes\"\n                                className=\"editChildLabel\"\n                            >\n                                Receive Clothes:\n                            </label>\n                        </td>\n                        <td>\n                            {child.receiveClothes ? (\n                                <FontAwesomeIcon icon={faTshirt} />\n                            ) : (\n                                ''\n                            )}\n                        </td>\n                        <td>\n                            {showForm ? (\n                                <input\n                                    name=\"receiveClothes\"\n                                    className=\"editChildCheckbox\"\n                                    type=\"checkbox\"\n                                    checked={receiveClothes}\n                                    onChange={(event) => {\n                                        setreceiveClothes(event.target.checked);\n                                    }}\n                                />\n                            ) : (\n                                ''\n                            )}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <label\n                                htmlFor=\"receiveFurniture\"\n                                className=\"editChildLabel\"\n                            >\n                                Receive Furniture:\n                            </label>\n                        </td>\n                        <td>\n                            {child.receiveFurniture ? (\n                                <FontAwesomeIcon icon={faChair} />\n                            ) : (\n                                ''\n                            )}\n                        </td>\n                        <td>\n                            {showForm ? (\n                                <input\n                                    name=\"receiveFurniture\"\n                                    className=\"editChildCheckbox\"\n                                    type=\"checkbox\"\n                                    checked={receiveFurniture}\n                                    onChange={(event) => {\n                                        setreceiveFurniture(\n                                            event.target.checked\n                                        );\n                                    }}\n                                />\n                            ) : (\n                                ''\n                            )}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <label\n                                htmlFor=\"donateToys\"\n                                className=\"editChildLabel\"\n                            >\n                                Donate Toys:\n                            </label>\n                        </td>\n                        <td>\n                            {child.donateToys ? (\n                                <FontAwesomeIcon icon={faChess} />\n                            ) : (\n                                ''\n                            )}\n                        </td>\n                        <td>\n                            {showForm ? (\n                                <input\n                                    name=\"donateToys\"\n                                    className=\"editChildCheckbox\"\n                                    type=\"checkbox\"\n                                    checked={donateToys}\n                                    onChange={(event) => {\n                                        setdonateToys(event.target.checked);\n                                    }}\n                                />\n                            ) : (\n                                ''\n                            )}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <label\n                                htmlFor=\"donateClothes\"\n                                className=\"editChildLabel\"\n                            >\n                                Donate Clothes:\n                            </label>\n                        </td>\n                        <td>\n                            {child.donateClothes ? (\n                                <FontAwesomeIcon icon={faTshirt} />\n                            ) : (\n                                ''\n                            )}\n                        </td>\n                        <td>\n                            {showForm ? (\n                                <input\n                                    name=\"donateClothes\"\n                                    className=\"editChildCheckbox\"\n                                    type=\"checkbox\"\n                                    checked={donateClothes}\n                                    onChange={(event) => {\n                                        setdonateClothes(event.target.checked);\n                                    }}\n                                />\n                            ) : (\n                                ''\n                            )}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <label\n                                htmlFor=\"donateFurniture\"\n                                className=\"editChildLabel\"\n                            >\n                                Donate Furniture:\n                            </label>\n                        </td>\n                        <td>\n                            {child.donateFurniture ? (\n                                <FontAwesomeIcon icon={faChair} />\n                            ) : (\n                                ''\n                            )}\n                        </td>\n                        <td>\n                            {showForm ? (\n                                <input\n                                    name=\"donateFurniture\"\n                                    className=\"editChildCheckbox\"\n                                    type=\"checkbox\"\n                                    checked={donateFurniture}\n                                    onChange={(event) => {\n                                        setdonateFurniture(\n                                            event.target.checked\n                                        );\n                                    }}\n                                />\n                            ) : (\n                                ''\n                            )}\n                        </td>\n                    </tr>\n                    {toyTags.map((tag) => (\n                        <EditTagCheckbox\n                            tag={tag.tag}\n                            tags={tags}\n                            id={tag.id}\n                            key={tag.id}\n                            icon={faCheckSquare}\n                            Icon={FontAwesomeIcon}\n                            edit={showForm}\n                            onClick={handlecheckboxClick}\n                        />\n                    ))}\n                    {clothesTags.map((tag) => (\n                        <EditTagCheckbox\n                            tag={tag.tag}\n                            tags={tags}\n                            id={tag.id}\n                            key={tag.id}\n                            icon={faCheckSquare}\n                            Icon={FontAwesomeIcon}\n                            edit={showForm}\n                            onClick={handlecheckboxClick}\n                        />\n                    ))}\n                    {furnitureTags.map((tag) => (\n                        <EditTagCheckbox\n                            tag={tag.tag}\n                            tags={tags}\n                            id={tag.id}\n                            key={tag.id}\n                            icon={faCheckSquare}\n                            Icon={FontAwesomeIcon}\n                            edit={showForm}\n                            onClick={handlecheckboxClick}\n                        />\n                    ))}\n                    <tr></tr>\n                </tbody>\n            </table>\n            {showForm ? (\n                <div className=\"btnDiv\">\n                    <button className=\"btn btn-default\" onClick={deleteChild}>\n                        Delete Child\n                    </button>\n                    <button className=\"btn btn-default\" onClick={saveChanges}>\n                        Save Changes\n                    </button>\n                    <button className=\"btn btn-default\" onClick={reload}>\n                        Cancel\n                    </button>\n                </div>\n            ) : (\n                <div className=\"btnDiv\">\n                    <button className=\"btn btn-default\" onClick={hideShowForm}>\n                        Edit Child\n                    </button>\n                </div>\n            )}\n        </div>\n    );\n}\nexport default ChildProfile;\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport API from '../../utils/API';\nimport ChildProfile from '../ChildProfile';\nimport './style.css';\n\nfunction Profiles() {\n    const [id, setId] = useState('');\n    const [email, setEmail] = useState('');\n    const [address1, setAddress] = useState('');\n    const [city, setCity] = useState('');\n    const [state, setState] = useState('');\n    const [zipCode, setZipCode] = useState('');\n    const [showForm, setShowForm] = useState(false);\n    const currentUser = API.getCurrentUser('');\n    const [redirect, setRedirect] = useState(false);\n    const [refresh, setRefresh] = useState(false);\n    const [children, setChildren] = useState([]);\n    const hideShowForm = () => {\n        if (showForm) {\n            setShowForm(false);\n        } else {\n            setShowForm(true);\n        }\n    };\n    const updateInfo = (event) => {\n        event.preventDefault();\n        API.editUser({\n            email,\n            id,\n            address1,\n            city,\n            state,\n            zipCode,\n        }).then((response) => {\n            if (response.status === 200) {\n                localStorage.setItem(\n                    'user',\n                    JSON.stringify({\n                        ...currentUser,\n                        email: email,\n                        address1: address1,\n                        city: city,\n                        state: state,\n                        zipCode: zipCode,\n                    })\n                );\n                setShowForm(false);\n            }\n        });\n    };\n    const addChild = () => {\n        setRedirect(true);\n    };\n\n    useEffect(() => {\n        setId(currentUser.id);\n        setEmail(currentUser.email);\n        setAddress(currentUser.address1);\n        setCity(currentUser.city);\n        setState(currentUser.state);\n        setZipCode(currentUser.zipCode);\n        setChildren(currentUser.children);\n    }, []);\n\n    const reload = () => {\n        window.location.reload();\n    };\n\n    if (redirect) {\n        return <Redirect to=\"/AddChild\" />;\n    }\n\n    if (refresh) {\n        setRefresh(false);\n        return <Redirect to=\"/Profile\" />;\n    }\n\n    return (\n        <div className=\"parentProfile\">\n            <h2 className=\"editTitle\">Edit your profile</h2>\n            <table className=\"table\">\n                <tbody id=\"tableBody\">\n                    <tr>\n                        <td className=\"right-Align\">\n                            <label htmlFor=\"email\" className=\"parentLabel\">\n                                Email:\n                            </label>\n                        </td>\n                        <td>{currentUser.email}</td>\n                        <td>\n                            {showForm ? (\n                                <input\n                                    name=\"email\"\n                                    className=\"parentInput\"\n                                    type=\"text\"\n                                    placeholder={email}\n                                    value={email}\n                                    onChange={(event) => {\n                                        setEmail(event.target.value);\n                                    }}\n                                />\n                            ) : (\n                                ''\n                            )}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"right-Align\">\n                            <label htmlFor=\"address1\" className=\"parentLabel\">\n                                Address:\n                            </label>\n                        </td>\n                        <td>{currentUser.address1}</td>\n                        <td>\n                            {showForm ? (\n                                <input\n                                    name=\"address1\"\n                                    className=\"parentInput\"\n                                    type=\"text\"\n                                    placeholder={address1}\n                                    value={address1}\n                                    onChange={(event) => {\n                                        setAddress1(event.target.value);\n                                    }}\n                                />\n                            ) : (\n                                ''\n                            )}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"right-Align\">\n                            <label htmlFor=\"city\" className=\"parentLabel\">\n                                City:\n                            </label>\n                        </td>\n                        <td>{currentUser.city}</td>\n                        <td>\n                            {showForm ? (\n                                <input\n                                    name=\"city\"\n                                    className=\"parentInput\"\n                                    type=\"text\"\n                                    placeholder={city}\n                                    value={city}\n                                    onChange={(event) => {\n                                        setCity(event.target.value);\n                                    }}\n                                />\n                            ) : (\n                                ''\n                            )}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"right-Align\">\n                            <label htmlFor=\"state\" className=\"parentLabel \">\n                                State:\n                            </label>\n                        </td>\n                        <td>{currentUser.state}</td>\n                        <td>\n                            {showForm ? (\n                                <input\n                                    name=\"state\"\n                                    className=\"parentInput\"\n                                    type=\"text\"\n                                    placeholder={state}\n                                    value={state}\n                                    onChange={(event) => {\n                                        setState(event.target.value);\n                                    }}\n                                />\n                            ) : (\n                                ''\n                            )}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"right-Align\">\n                            <label htmlFor=\"zipCode\" className=\"parentLabel \">\n                                Zip Code:\n                            </label>\n                        </td>\n                        <td>{currentUser.zipCode}</td>\n                        <td>\n                            {showForm ? (\n                                <input\n                                    name=\"zipCode\"\n                                    className=\"parentInput\"\n                                    type=\"text\"\n                                    placeholder={zipCode}\n                                    value={zipCode}\n                                    onChange={(event) => {\n                                        setZipCode(event.target.value);\n                                    }}\n                                />\n                            ) : (\n                                ''\n                            )}\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            {showForm ? (\n                <div>\n                    <button onClick={updateInfo} className=\"btn btn-default\">\n                        Update\n                    </button>\n                    <button onClick={reload} className=\"btn btn-default\">\n                        Cancel\n                    </button>\n                </div>\n            ) : (\n                <div>\n                    <button onClick={hideShowForm} className=\"btn btn-default\">\n                        Edit\n                    </button>\n                    <button onClick={addChild} className=\"btn btn-default\">\n                        Add Child\n                    </button>\n                </div>\n            )}\n            <div className=\"childDiv\">\n                {children.map((child) => (\n                    <ChildProfile\n                        key={'childId-' + child.childId}\n                        {...child}\n                        refresh={setRefresh}\n                        ParentId={currentUser.id}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default Profiles;\n","import React from 'react';\nimport Profiles from '../components/Profiles';\n\nfunction Profile() {\n    return (\n        <div className=\"loggedInDiv\">\n            <Profiles />\n        </div>\n    );\n}\nexport default Profile;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TagCheckbox({ tag, id, onClick }) {\n    const [isChecked, setisChecked] = useState(false);\n    return (\n        <div>\n            <label>{tag}:</label>\n            <input\n                type=\"checkbox\"\n                value={isChecked}\n                onChange={(event) => {\n                    setisChecked(event.target.value);\n                    onClick(event, id);\n                }}\n            />\n        </div>\n    );\n}\nTagCheckbox.propTypes = {\n    tag: PropTypes.string,\n    id: PropTypes.number,\n    onClick: PropTypes.func,\n};\nexport default TagCheckbox;\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport API from '../../utils/API';\nimport TagCheckbox from '../TagCheckbox';\nimport './style.css';\n\nfunction AddChild() {\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [birthday, setBirthday] = useState('');\n    const [gender, setGender] = useState('');\n    const [receiveToys, setreceiveToys] = useState(false);\n    const [receiveClothes, setreceiveClothes] = useState(false);\n    const [receiveFurniture, setreceiveFurniture] = useState(false);\n    const [donateToys, setdonateToys] = useState(false);\n    const [donateClothes, setdonateClothes] = useState(false);\n    const [donateFurniture, setdonateFurniture] = useState(false);\n    const [tags, setTags] = useState([]);\n    const currentUser = API.getCurrentUser('');\n    const [redirect, setRedirect] = useState(false);\n    const [toyTags, settoyTags] = useState([]);\n    const [clothesTags, setclothesTags] = useState([]);\n    const [furnitureTags, setfurnitureTags] = useState([]);\n\n    const handleClick = (event) => {\n        event.preventDefault();\n        API.addChild({\n            firstName,\n            lastName,\n            birthday,\n            gender,\n            receiveToys,\n            receiveClothes,\n            receiveFurniture,\n            donateToys,\n            donateClothes,\n            donateFurniture,\n            tags,\n            ParentId: currentUser.id,\n        }).then((response) => {\n            if (response.status === 200) {\n                currentUser.children.push({\n                    childId: response.data.id,\n                    firstName: firstName,\n                    lastName: lastName,\n                    birthday: birthday,\n                    gender: gender,\n                    receiveToys: receiveToys,\n                    receiveClothes: receiveClothes,\n                    receiveFurniture: receiveFurniture,\n                    donateToys: donateToys,\n                    donateClothes: donateClothes,\n                    donateFurniture: donateFurniture,\n                    tags: tags,\n                });\n                localStorage.setItem('user', JSON.stringify(currentUser));\n                setRedirect(true);\n            }\n        });\n    };\n\n    const handleTagClick = (event, id) => {\n        event.preventDefault();\n        setTags([...tags, id]);\n    };\n\n    useEffect(() => {\n        API.getTags(currentUser.id).then((response) => {\n            if (response !== 'Error getting tags') {\n                settoyTags(response.toyTags);\n                setclothesTags(response.clothesTags);\n                setfurnitureTags(response.furnitureTags);\n            }\n        });\n    }, []);\n\n    if (redirect) {\n        return <Redirect to=\"/Profile\" />;\n    }\n\n    return (\n        <div className=\"addChild\">\n            <h2 className=\"addChildTitle\">Add a Child</h2>\n            <form className=\"addChildForm\">\n                <label htmlFor=\"fName\" className=\"addChildLabel\">\n                    First Name:\n                </label>\n                <input\n                    name=\"fName\"\n                    className=\"addChildInput\"\n                    type=\"text\"\n                    value={firstName}\n                    onChange={(event) => {\n                        setFirstName(event.target.value);\n                    }}\n                />\n                <br />\n                <label htmlFor=\"lName\" className=\"addChildLabel\">\n                    Last Name:\n                </label>\n                <input\n                    name=\"lName\"\n                    className=\"addChildInput\"\n                    type=\"text\"\n                    value={lastName}\n                    onChange={(event) => {\n                        setLastName(event.target.value);\n                    }}\n                />\n                <br />\n                <label htmlFor=\"bDay\" className=\"addChildLabel\">\n                    Birthday:\n                </label>\n                <input\n                    name=\"bDay\"\n                    className=\"addChildInput\"\n                    type=\"text\"\n                    placeholder=\"YYYY-MM-DD\"\n                    value={birthday}\n                    onChange={(event) => {\n                        setBirthday(event.target.value);\n                    }}\n                />\n                <br />\n                <label htmlFor=\"gender\" className=\"addChildLabel\">\n                    Gender:\n                </label>\n                <select\n                    className=\"childSelect\"\n                    onChange={(event) => {\n                        setGender(event.target.value);\n                    }}\n                >\n                    <option value=\"male\">male</option>\n                    <option value=\"female\">female</option>\n                </select>\n                <br />\n                <label htmlFor=\"receiveToys\" className=\"addChildLabel\">\n                    Receive Toys:\n                </label>\n                <input\n                    name=\"receiveToys\"\n                    className=\"addChildCheckbox\"\n                    type=\"checkbox\"\n                    value={true}\n                    onChange={(event) => {\n                        setreceiveToys(event.target.value);\n                    }}\n                />\n                <br />\n                <label htmlFor=\"receiveClothes\" className=\"addChildLabel\">\n                    Receive Clothes:\n                </label>\n                <input\n                    name=\"receiveClothes\"\n                    className=\"addChildCheckbox\"\n                    type=\"checkbox\"\n                    value={true}\n                    onChange={(event) => {\n                        setreceiveClothes(event.target.value);\n                    }}\n                />\n                <br />\n                <label htmlFor=\"receiveFurniture\" className=\"addChildLabel\">\n                    Receive Furniture:\n                </label>\n                <input\n                    name=\"receiveFurniture\"\n                    className=\"addChildCheckbox\"\n                    type=\"checkbox\"\n                    value={true}\n                    onChange={(event) => {\n                        setreceiveFurniture(event.target.value);\n                    }}\n                />\n                <br />\n                <label htmlFor=\"donateToys\" className=\"addChildLabel\">\n                    Donate Toys:\n                </label>\n                <input\n                    name=\"donateToys\"\n                    className=\"addChildCheckbox\"\n                    type=\"checkbox\"\n                    value={true}\n                    onChange={(event) => {\n                        setdonateToys(event.target.value);\n                    }}\n                />\n                <br />\n                <label htmlFor=\"donateClothes\" className=\"addChildLabel\">\n                    Donate Clothes:\n                </label>\n                <input\n                    name=\"donateClothes\"\n                    className=\"addChildCheckbox\"\n                    type=\"checkbox\"\n                    value={true}\n                    onChange={(event) => {\n                        setdonateClothes(event.target.value);\n                    }}\n                />\n                <br />\n                <label htmlFor=\"donateFurniture\" className=\"addChildLabel\">\n                    Donate Furniture:\n                </label>\n                <input\n                    name=\"donateFurniture\"\n                    className=\"addChildCheckbox\"\n                    type=\"checkbox\"\n                    value={true}\n                    onChange={(event) => {\n                        setdonateFurniture(event.target.value);\n                    }}\n                />\n                <br />\n                <h3>Tell us your child&#8217;s interests:</h3>\n                {toyTags.map((tag) => (\n                    <TagCheckbox\n                        key={tag.id}\n                        tag={tag.tag}\n                        id={tag.id}\n                        onClick={handleTagClick}\n                    />\n                ))}\n                <h3>Tell us what clothes you need:</h3>\n                {clothesTags.map((tag) => (\n                    <TagCheckbox\n                        key={tag.id}\n                        tag={tag.tag}\n                        id={tag.id}\n                        onClick={handleTagClick}\n                    />\n                ))}\n                <h3>Tell us your furniture needs:</h3>\n                {furnitureTags.map((tag) => (\n                    <TagCheckbox\n                        key={tag.id}\n                        tag={tag.tag}\n                        id={tag.id}\n                        onClick={handleTagClick}\n                    />\n                ))}\n                <button onClick={handleClick} className=\"btn btn-default\">\n                    Add Child\n                </button>\n            </form>\n        </div>\n    );\n}\nexport default AddChild;\n","import React from 'react';\nimport AddChild from '../components/AddChild';\n\nfunction addChild() {\n    return (\n        <div className=\"loggedInDiv\">\n            <AddChild />\n        </div>\n    );\n}\nexport default addChild;\n","import React from 'react';\n\nconst toyTags = ({ tag }) => {\n    return (\n        <ul className=\"toyTags\">\n            {tag.map((m) => (\n                <li key={m.tag}>{m.tag}</li>\n            ))}\n        </ul>\n    );\n};\nexport default toyTags;\n","import React from 'react';\n\nconst clothesTags = ({ tag }) => {\n    return (\n        <ul className=\"clothesTags\">\n            {tag.map((m) => (\n                <li key={m.tag}>{m.tag}</li>\n            ))}\n        </ul>\n    );\n};\nexport default clothesTags;\n","import React from 'react';\n\nconst furnitureTags = ({ tag }) => {\n    return (\n        <ul className=\"furnitureTags\">\n            {tag.map((m) => (\n                <li key={m.tag}>{m.tag}</li>\n            ))}\n        </ul>\n    );\n};\nexport default furnitureTags;\n","import React from 'react';\nimport ToyTags from '../toyTags/toyTags';\nimport ClothesTags from '../clothesTags/clothesTags';\nimport FurnitureTags from '../furnitureTags/furnitureTags';\nimport './style.css';\n\nfunction DonationDemographics(child) {\n    const toytags = child.tags.filter((element) => element.type === 'toy');\n    const clothestags = child.tags.filter(\n        (element) => element.type === 'clothes'\n    );\n    const furnituretags = child.tags.filter(\n        (element) => element.type === 'furniture'\n    );\n    return (\n        <div className=\"DonationDemographics\">\n            <div className=\"card\">\n                <h3>{child.gender}</h3>\n                <h3>{child.age}</h3>\n                <ToyTags tag={toytags} />\n                <ClothesTags tag={clothestags} />\n                <FurnitureTags tag={furnituretags} />\n            </div>\n        </div>\n    );\n}\n\nexport default DonationDemographics;\n","import React from 'react';\nimport './chooseBtn.css';\nimport PropTypes from 'prop-types';\nfunction ChooseBtn({ changeChosen, childID }) {\n    return (\n        <button onClick={() => changeChosen(childID)} className={'card-btn'}>\n            Choose this Donation\n        </button>\n    );\n}\nChooseBtn.propTypes = {\n    changeChosen: PropTypes.func,\n    childID: PropTypes.number,\n};\nexport default ChooseBtn;\n","import React from 'react';\n\n// import DonationContext from '../../utils/donationContext';\n// import ToyTags from '../toyTags/toyTags';\n// import ClothesTags from '../clothesTags/clothesTags';\n// import FurnitureTags from '../furnitureTags/furnitureTags';\nimport PropTypes from 'prop-types';\nimport './style.css';\nconst Barcode = require('react-barcode');\nfunction ShippingLabel({\n    parentFName,\n    parentLName,\n    parentID,\n    parentAddy1,\n    parentCity,\n    parentState,\n    parentZip,\n    toggleModal,\n}) {\n    const barcodeString = `${parentFName}${parentLName}${parentID}`;\n    return (\n        <div id=\"container\" onClick={(event) => toggleModal(event)}>\n            <div className=\"ShippingLabel\">\n                <div onClick={(event) => toggleModal(event)}>X</div>\n                <h3>\n                    Please detach this half of the page and place inside your\n                    package\n                </h3>\n                <Barcode value={barcodeString} />\n                <p>\n                    -----------------------------------------------------------------------------------------\n                </p>\n                <div className=\"returnAddy\">\n                    <p>{`${parentFName} ${parentLName}`}</p>\n                    <p>{`${parentAddy1} ${parentCity}, ${parentState} ${parentZip}`}</p>\n                </div>\n                <br></br>\n                <br></br>\n                <br></br>\n                <div className=\"address\">\n                    <h3>Hand-Me-Ups LLC</h3>\n                    <h4>1234 Donation Lane</h4>\n                    <h4>Lynnburn Issaqualmie, WA 98123</h4>\n                    <Barcode value=\"HandMeUpsLLC\" />\n                </div>\n            </div>\n        </div>\n    );\n}\nShippingLabel.propTypes = {\n    parentFName: PropTypes.string,\n    parentLName: PropTypes.string,\n    parentAddy1: PropTypes.string,\n    parentCity: PropTypes.string,\n    parentState: PropTypes.string,\n    parentZip: PropTypes.string,\n    parentID: PropTypes.number,\n    toggleModal: PropTypes.func,\n};\n\nexport default ShippingLabel;\n","import React, { useState, useEffect } from 'react';\nimport DonationDemographics from '../DonationDemographics/domationDemographics';\nimport './outgoing.css';\nimport ChooseBtn from '../chooseBtn/chooseBtn';\nimport API from '../../utils/API';\nimport ShippingLabel from '../ShippingLabel';\n\nexport const Outgoing = () => {\n    const [loading, setLoading] = useState(true);\n    const [results, setResults] = useState([]);\n    const [chosenState, setChosenState] = useState(false);\n    const [shippingLabel, setShippingLabel] = useState(false);\n\n    function changeChosen() {\n        if (chosenState === false) {\n            setChosenState(true);\n        }\n        API.addDonation(userData)\n            .then((response) => {\n                return response.data;\n            })\n            .then(() => {\n                setShippingLabel(true);\n            });\n    }\n    const toggleModal = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        setShippingLabel(!shippingLabel);\n    };\n\n    const currentUser = API.getCurrentUser();\n    useEffect(() => {\n        API.getChildren().then((data) => {\n            setLoading(false);\n            setResults(data);\n        });\n    }, []);\n    if (loading) {\n        return <h1>Loading...</h1>;\n    }\n    return (\n        <div className=\"Outgoing\">\n            {results.map((childObject) => (\n                <div className=\"outgoingCard\" key={childObject.id}>\n                    <DonationDemographics child={childObject} />\n                    <ChooseBtn\n                        childID={childObject.id}\n                        changeChosen={changeChosen}\n                    />\n                </div>\n            ))}\n            {shippingLabel ? (\n                <ShippingLabel\n                    parentFName={currentUser.firstName}\n                    parentLName={currentUser.lastName}\n                    parentAddy1={currentUser.address1}\n                    parentCity={currentUser.city}\n                    parentState={currentUser.state}\n                    parentZip={currentUser.zipCode}\n                    parentID={currentUser.id}\n                    toggleModal={toggleModal}\n                />\n            ) : (\n                <> </>\n            )}\n            ;\n        </div>\n    );\n};\nexport default Outgoing;\n","import React from 'react';\n\nimport Outgoing from '../components/Outgoing Donations';\nimport './donationStyle.css';\n\nfunction Donations() {\n    return (\n        <div className=\"container1\">\n            <div className=\"grid loggedInDiv\">\n                <h1>Donations</h1>\n                <Outgoing />\n            </div>\n        </div>\n    );\n}\n\nexport default Donations;\n","import React, { useState, createContext } from 'react';\n\nconst GlobalContext = createContext();\n\nexport const GlobalContextProvider = (props) => {\n    const [shipNotifications, setShipNotifications] = useState(0);\n\n    return (\n        <GlobalContext.Provider\n            value={{\n                shipNotifications,\n                setShipNotifications,\n            }}\n        >\n            {/* eslint-disable-next-line react/prop-types*/}\n            {props.children}\n        </GlobalContext.Provider>\n    );\n};\n\nimport PropTypes from 'prop-types';\n\nGlobalContext.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default GlobalContext;\n","import React, { useContext, useEffect } from 'react';\nimport GlobalContext from '../../utils/GlobalContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMailBulk } from '@fortawesome/free-solid-svg-icons';\n\nimport './style.css';\n\nconst io = require('socket.io-client');\nconst socket = io({\n    withCredentials: true,\n    extraHeaders: {\n        'hand-me-ups-header': 'header-content',\n    },\n});\n\nfunction Notification() {\n    const { shipNotifications, setShipNotifications } = useContext(\n        GlobalContext\n    );\n\n    useEffect(() => {\n        socket.on('package', () => {\n            setShipNotifications(shipNotifications + 1);\n        });\n    });\n\n    useEffect(() => {\n        document.title = `${shipNotifications} new package coming`;\n    }, [shipNotifications]);\n\n    const handleMouseClick = (event) => {\n        event.preventDefault();\n        setShipNotifications(0);\n    };\n\n    return (\n        <React.Fragment>\n            <div\n                className=\"notification\"\n                onClick={(event) => handleMouseClick(event)}\n            >\n                <FontAwesomeIcon icon={faMailBulk} />\n                {shipNotifications > 0 ? (\n                    <span className=\"badge\">{shipNotifications}</span>\n                ) : (\n                    ''\n                )}\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport const handleNewMessage = (method, book) => {\n    socket.emit('package', {\n        method,\n        book,\n    });\n};\n\nexport default Notification;\n","import React from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport Notification from '../notification';\nimport API from '../../utils/API';\nimport './style.css';\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Navbar() {\n    const history = useHistory();\n\n    const logout = () => {\n        API.logout();\n        history.push('/');\n    };\n\n    return (\n        <nav className=\"navbar\">\n            <div className=\"navbar-branding\">\n                <div className=\"navbar-brand\">\n                    <h1>Hand Me Ups</h1>\n                </div>\n            </div>\n            <div>\n                <ul className=\"nav-list\">\n                    <li>\n                        <Notification />\n                    </li>\n                    <li className=\"nav-spacer\">|</li>\n                    <li className=\"nav-item\">\n                        <NavLink\n                            to=\"/Members\"\n                            className=\"nav-link\"\n                            activeClassName=\"active\"\n                        >\n                            Members\n                        </NavLink>\n                    </li>\n                    <li className=\"nav-spacer\">|</li>\n                    <li className=\"nav-item\" activeClassName=\"active\">\n                        <NavLink\n                            to=\"/Profile\"\n                            className=\"nav-link\"\n                            activeClassName=\"active\"\n                        >\n                            Profile\n                        </NavLink>\n                    </li>\n                    <li className=\"nav-spacer\">|</li>\n                    <li className=\"nav-item\" onClick={logout}>\n                        <span className=\"nav-link\">Logout</span>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction MessageLine({ line, author }) {\n    let align = { textAlign: 'right' };\n    if (line.author === author) {\n        align = { textAlign: 'left' };\n    }\n\n    return (\n        <div className=\"messageLine\" style={align}>\n            {line.author}: {line.message}\n        </div>\n    );\n}\n\nMessageLine.propTypes = {\n    line: PropTypes.object,\n    author: PropTypes.string,\n};\n\nexport default MessageLine;\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faPaperPlane } from '@fortawesome/free-solid-svg-icons';\nimport './style.css';\nimport API from '../../utils/API';\nimport MessageLine from '../MessageLine';\n\nconst io = require('socket.io-client');\nconst socket = io({\n    withCredentials: true,\n    extraHeaders: {\n        'hand-me-ups': 'header-content',\n    },\n});\n\nfunction Chat() {\n    const [message, setMessage] = useState('');\n    const [showPopup, setShowPopup] = useState(false);\n    const [feedback, setFeedback] = useState('');\n    const [showFeedback, setShowFeedback] = useState(false);\n    const [output, setOutput] = useState([]);\n    const currentUser = API.getCurrentUser({});\n    const [notificationCount, setNotificationCount] = useState(0);\n\n    const handleMessage = (event) => {\n        setMessage(event.target.value);\n        socket.emit('typing', currentUser.firstName);\n    };\n\n    const handleSend = () => {\n        socket.emit('chat', {\n            author: currentUser.firstName,\n            message: message,\n        });\n        setMessage('');\n    };\n\n    // Listen for events\n    socket.on('chat', (data) => {\n        setFeedback('');\n        setShowFeedback(false);\n        setOutput([...output, data]);\n        if (!showPopup) {\n            setNotificationCount(notificationCount + 1);\n        }\n    });\n\n    socket.on('typing', (data) => {\n        setFeedback(data);\n        setShowFeedback(true);\n    });\n\n    return (\n        <section className=\"chat-section\">\n            {showPopup ? (\n                <div>\n                    <div className=\"chat-popup\">\n                        <div className=\"chat-area\">\n                            <div className=\"income-msg\">\n                                <div className=\"feedback\">\n                                    <em>\n                                        {showFeedback\n                                            ? `${feedback} is typing a message...`\n                                            : ''}\n                                    </em>\n                                </div>\n                                <div className=\"output\">\n                                    {output.map((line, index) => (\n                                        <MessageLine\n                                            key={index}\n                                            line={line}\n                                            author={currentUser.firstName}\n                                        />\n                                    ))}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"input-area\">\n                            <input\n                                id=\"message\"\n                                type=\"text\"\n                                placeholder=\"Message\"\n                                value={message}\n                                onChange={(event) => handleMessage(event)}\n                            />\n                            <button\n                                className=\"submit\"\n                                id=\"send\"\n                                onClick={() => handleSend()}\n                            >\n                                <FontAwesomeIcon icon={faPaperPlane} />\n                            </button>\n                        </div>\n                    </div>\n                    <div\n                        className=\"notification chat-btn\"\n                        onClick={() => {\n                            setShowPopup(!showPopup);\n                            setNotificationCount(0);\n                        }}\n                    >\n                        <FontAwesomeIcon icon={faUser} />\n                    </div>\n                </div>\n            ) : (\n                <div\n                    className=\"notification chat-btn\"\n                    onClick={() => {\n                        setShowPopup(!showPopup);\n                        setNotificationCount(0);\n                    }}\n                >\n                    <FontAwesomeIcon icon={faUser} />\n                    {notificationCount > 0 ? (\n                        <span className=\"badge\">{notificationCount}</span>\n                    ) : (\n                        ''\n                    )}\n                </div>\n            )}\n        </section>\n    );\n}\n\nexport default Chat;\n","import React from 'react';\nimport './style.css';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <span>Hand Me Ups ©2020</span>\n        </footer>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Forgot from './pages/Forgot';\nimport Signup from './pages/Signup';\nimport Members from './pages/Members';\nimport Welcome from './pages/Welcome';\nimport Profile from './pages/Profile';\nimport AddChild from './pages/AddChild';\nimport Donations from './pages/Donations';\n\nimport Navbar from './components/Navbar';\nimport Chat from './components/Chat';\nimport Footer from './components/Footer';\n\nimport API from './utils/API';\nimport { GlobalContextProvider } from './utils/GlobalContext';\n\nconst PrivateRoute = ({ component, ...options }) => {\n    if (API.getCurrentUser()) {\n        return <Route {...options} component={component} />;\n    }\n    return <Redirect to={'/'} />;\n};\n\nPrivateRoute.propTypes = {\n    options: PropTypes.object,\n    component: PropTypes.func.isRequired,\n};\n\nconst App = () => (\n    <GlobalContextProvider>\n        <Switch>\n            <Route exact path=\"/\" />\n            <Route component={Navbar} />\n        </Switch>\n        <Switch>\n            <PrivateRoute exact path=\"/Members\" component={Members} />\n            <PrivateRoute exact path=\"/Profile\" component={Profile} />\n            <PrivateRoute exact path=\"/AddChild\" component={AddChild} />\n            <PrivateRoute exact path=\"/Donations\" component={Donations} />\n            <Route exact path=\"/Forgot\" component={Forgot} />\n            <Route exact path=\"/Signup\" component={Signup} />\n            <Route path=\"/\" component={Welcome} />\n        </Switch>\n        <Switch>\n            <Route exact path=\"/\" />\n            <Route component={Chat} />\n        </Switch>\n        <Footer />\n    </GlobalContextProvider>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (!isLocalhost) {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl);\n            } else {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log(\n                                'New content is available; please refresh.'\n                            );\n                        } else {\n                            // At this point, everything has been pre-cached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get('content-type').indexOf('javascript') ===\n                    -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}